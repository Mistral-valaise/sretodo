{{- if .Values.sretodoNginxGateway.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sretodo-nginx-gateway
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "sretodo.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: nginx-gateway
  template:
    metadata:
      labels:
        {{- include "sretodo.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: nginx-gateway
    spec:
      securityContext:
        fsGroup: 101
        runAsUser: 101
        runAsGroup: 101
      containers:
        - name: {{ .Chart.Name }}-nginx-gateway
          image: "{{ .Values.sretodoNginxGateway.image.repository }}:{{ .Values.sretodoNginxGateway.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.sretodoNginxGateway.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
      volumes:
        - name: nginx-config
          configMap:
            name: sretodo-nginx-config
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sretodo-nginx-config
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx-gateway
data:
  default.conf: |
    server {
        listen 80;
        server_name _;

        # Frontend
        location / {
            proxy_pass http://sretodo-frontend:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Java Todo API
        location /api/todos/ {
            proxy_pass http://sretodo-java-todo:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # .NET Statistik API
        location /api/statistik/ {
            proxy_pass http://sretodo-dotnet-statistik:5000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Python Pomodoro API
        location /api/pomodoro/ {
            proxy_pass http://sretodo-python-pomodoro:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: sretodo-nginx-gateway
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx-gateway
spec:
  type: {{ .Values.sretodoNginxGateway.service.type }}
  ports:
    - port: {{ .Values.sretodoNginxGateway.service.port }}
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "sretodo.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: nginx-gateway
{{- end }}