{{- if .Values.nginxGateway.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nginx-gateway
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx-gateway
spec:
  replicas: {{ .Values.nginxGateway.replicas }}
  selector:
    matchLabels:
      {{- include "sretodo.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: nginx-gateway
  template:
    metadata:
      labels:
        {{- include "sretodo.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: nginx-gateway
    spec:
      securityContext:
        fsGroup: 1006530000
      containers:
        - name: nginx-gateway
          image: "{{ .Values.nginxGateway.image }}:{{ .Values.nginxGateway.tag }}"
          imagePullPolicy: {{ .Values.nginxGateway.pullPolicy }}
          securityContext:
            runAsNonRoot: true
            runAsUser: 1006530000
            runAsGroup: 1006530000
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
            - name: nginx-tmp
              mountPath: /tmp
          resources:
            {{- toYaml .Values.nginxGateway.resources | nindent 12 }}
      volumes:
        - name: nginx-config
          configMap:
            name: {{ .Release.Name }}-nginx-config
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        - name: nginx-tmp
          emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-nginx-config
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx-gateway
data:
  default.conf: |
    server {
        listen 8080;
        server_name localhost;

        location / {
            proxy_pass http://{{ .Release.Name }}-frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        {{- if .Values.javaTodo.enabled }}
        location /api/todos/ {
            proxy_pass http://{{ .Release.Name }}-java-todo:8080/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        {{- end }}

        {{- if .Values.dotnetStatistik.enabled }}
        location /api/statistics {
            proxy_pass http://{{ .Release.Name }}-dotnet-statistik:5000/statistics;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        {{- end }}

        {{- if .Values.pythonPomodoro.enabled }}
        location /api/pomodoro/timers {
            proxy_pass http://{{ .Release.Name }}-python-pomodoro:8000/timers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        {{- end }}
    }
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-nginx-gateway
  labels:
    {{- include "sretodo.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx-gateway
spec:
  type: {{ .Values.nginxGateway.service.type }}
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    {{- include "sretodo.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: nginx-gateway
{{- end }}