apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-frontend
  labels:
    app: sretodo
    component: frontend
spec:
  replicas: {{ .Values.frontend.replicas }}
  selector:
    matchLabels:
      app: sretodo
      component: frontend
  template:
    metadata:
      labels:
        app: sretodo
        component: frontend
    spec:
      securityContext:
        fsGroup: 1006530000
      containers:
      - name: frontend
        image: {{ .Values.frontend.image }}:{{ .Values.frontend.tag }}
        imagePullPolicy: {{ .Values.frontend.pullPolicy }}
        ports:
        - containerPort: 8080
          name: http
        securityContext:
          runAsNonRoot: true
          runAsUser: 1006530000
          runAsGroup: 1006530000
        resources:
          limits:
            cpu: {{ .Values.frontend.resources.limits.cpu }}
            memory: {{ .Values.frontend.resources.limits.memory }}
          requests:
            cpu: {{ .Values.frontend.resources.requests.cpu }}
            memory: {{ .Values.frontend.resources.requests.memory }}
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 30
      volumes:
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        - name: nginx-tmp
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-frontend
  labels:
    app: sretodo
    component: frontend
spec:
  type: {{ .Values.frontend.service.type }}
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: sretodo
    component: frontend