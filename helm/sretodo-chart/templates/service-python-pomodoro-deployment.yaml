{{- if .Values.servicePythonPomodoro.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sretodo-chart.fullname" . }}-python-pomodoro
  labels:
    {{- include "sretodo-chart.labels" . | nindent 4 }}
    app.kubernetes.io/component: python-pomodoro
spec:
  replicas: {{ .Values.servicePythonPomodoro.replicaCount }}
  selector:
    matchLabels:
      {{- include "sretodo-chart.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: python-pomodoro
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sretodo-chart.labels" . | nindent 8 }}
        app.kubernetes.io/component: python-pomodoro
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sretodo-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-python-pomodoro
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.servicePythonPomodoro.image.repository }}:{{ .Values.servicePythonPomodoro.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # Wichtig: Der Command muss aus dem Dockerfile übernommen werden (Start mit Agent)
          command: ["opentelemetry-instrument"]
          args:
            - "uvicorn"
            - "app:app"
            - "--host"
            - "0.0.0.0"
            - "--port"
            - "{{ .Values.servicePythonPomodoro.service.port }}" # Port aus Values
          ports:
            - name: http
              containerPort: {{ .Values.servicePythonPomodoro.service.port }} # Port aus Values
              protocol: TCP
          env:
            - name: PORT # Uvicorn nutzt diesen Port intern
              value: "{{ .Values.servicePythonPomodoro.service.port }}"
            - name: OTEL_SERVICE_NAME
              value: "service-python-pomodoro"
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              # Verweist auf den Service des OTel Collector Sub-Charts
              value: {{ .Values.config.otel.collectorEndpointHttp }}
            - name: OTEL_PYTHON_LOGGING_AUTO_INSTRUMENTATION_ENABLED
              value: "true"
            - name: OTEL_TRACES_EXPORTER
              value: "otlp"
            - name: OTEL_METRICS_EXPORTER
              value: "otlp"
            - name: OTEL_LOGS_EXPORTER
              value: "otlp"
            - name: OTEL_EXPORTER_OTLP_PROTOCOL
              value: "http/protobuf"
          # Liveness/Readiness Probes für den Health-Endpunkt
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 15
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 