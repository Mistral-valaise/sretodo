name: Destroy SRE ToDo Demo from OpenShift

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to destroy (production, staging, etc)"
        required: true
        default: "production"
      namespace:
        description: "OpenShift namespace"
        required: false
      release_name:
        description: "Helm release name to uninstall"
        required: true
        default: "sretodo-release"

jobs:
  destroy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: "latest"

      - name: Install OpenShift CLI
        run: |
          curl -L https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz -o oc.tar.gz
          tar xzf oc.tar.gz
          sudo mv oc /usr/local/bin/
          sudo chmod +x /usr/local/bin/oc
          rm -f oc.tar.gz README.md || true
          oc version

      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          namespace: ${{ github.event.inputs.namespace || secrets.OPENSHIFT_NAMESPACE }}

      - name: Uninstall Helm Chart
        run: |
          echo "Uninstalling Helm release ${{ github.event.inputs.release_name }} from namespace ${{ github.event.inputs.namespace || secrets.OPENSHIFT_NAMESPACE }}"
          helm uninstall ${{ github.event.inputs.release_name }} -n ${{ github.event.inputs.namespace || secrets.OPENSHIFT_NAMESPACE }}

      - name: Verify resources are deleted
        run: |
          echo "Verifying all resources are deleted..."
          oc get all -l app=sretodo -n ${{ github.event.inputs.namespace || secrets.OPENSHIFT_NAMESPACE }}

      - name: Clean up persistent volumes (optional)
        if: github.event.inputs.environment != 'production'
        run: |
          echo "Cleaning up persistent volumes claims..."
          oc delete pvc --selector=app=sretodo -n ${{ github.event.inputs.namespace || secrets.OPENSHIFT_NAMESPACE }}
